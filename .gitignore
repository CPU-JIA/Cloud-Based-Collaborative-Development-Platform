# Cloud-Based Collaborative Development Platform
# Git忽略文件配置

# =============================================================================
# 环境配置和敏感信息
# =============================================================================
.env
.env.local
.env.development
.env.staging
.env.production
*.env

# 配置文件备份
config.local.yaml
config.*.yaml.backup

# SSL证书和密钥
*.pem
*.key
*.crt
*.p12
*.pfx

# =============================================================================
# Go语言特定
# =============================================================================
# 二进制文件
bin/
*.exe
*.exe~
*.dll
*.so
*.dylib

# 测试二进制文件
*.test

# 输出
*.out

# Go工作区文件
go.work
go.work.sum

# 依赖
vendor/

# Go模块下载缓存
**/go/pkg/mod/

# IDE生成的文件
.vscode/
.idea/
*.swp
*.swo
*~

# =============================================================================
# 构建和部署产物
# =============================================================================
# 构建输出
build/
dist/
*.tar.gz
*.zip

# Docker
.dockerignore.local
docker-compose.override.yml
docker-compose.*.override.yml

# Kubernetes
kustomization.yaml.local
*.kubeconfig

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl
terraform.tfvars
terraform.tfvars.json

# Helm
charts/*/charts/
charts/*/requirements.lock

# =============================================================================
# 日志文件
# =============================================================================
logs/
*.log
*.log.*
log/

# =============================================================================
# 数据库文件
# =============================================================================
# SQLite
*.db
*.sqlite
*.sqlite3

# 数据库备份
*.sql.gz
*.dump
backups/

# =============================================================================
# 缓存和临时文件
# =============================================================================
# OS生成
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
desktop.ini

# 临时文件
tmp/
temp/
*.tmp
*.temp

# 缓存
cache/
.cache/

# =============================================================================
# 测试和覆盖率
# =============================================================================
# 测试输出
coverage.out
coverage.html
*.cover
.coverage
htmlcov/

# 测试数据
testdata/output/
*.test.json

# 基准测试
*.bench

# =============================================================================
# 文档生成
# =============================================================================
# API文档
api/docs/swagger.json
api/docs/swagger.yaml
docs/api/

# 生成的文档
*.pdf
site/

# =============================================================================
# 依赖和包管理
# =============================================================================
# Node.js (前端依赖)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
package-lock.json
yarn.lock

# Python (工具脚本依赖)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
pip-log.txt
pip-delete-this-directory.txt

# =============================================================================
# 监控和性能分析
# =============================================================================
# Profiling
*.prof
*.pprof
profile.out

# 监控数据
prometheus/
grafana/data/

# =============================================================================
# 开发工具
# =============================================================================
# Air (Go热重载)
.air.toml
tmp/

# Delve调试器
debug
debug.test

# Mock生成
*_mock.go
mocks/

# 代码生成
*.pb.go
*.gen.go

# =============================================================================
# 云服务和部署
# =============================================================================
# AWS
.aws/

# GCP
gcp-service-account.json
*.json

# Azure
.azure/

# =============================================================================
# 安全扫描
# =============================================================================
# 安全工具输出
.snyk
security-report.json
vulnerability-report.html

# =============================================================================
# 备份文件
# =============================================================================
*.bak
*.backup
*.old
*.orig

# =============================================================================
# 特定于项目的排除
# =============================================================================
# 上传文件存储
uploads/
storage/

# 生成的protobuf文件
api/**/*.pb.go
api/**/*_grpc.pb.go

# Swagger UI
swagger-ui/

# 测试文件
test-results/
junit.xml

# =============================================================================
# 本地开发配置
# =============================================================================
# 本地数据库
*.db-journal

# 本地配置覆盖
config.local.*
settings.local.*

# 开发者个人配置
.dev.yaml
.personal.yaml

# =============================================================================
# 生产部署
# =============================================================================
# 密钥文件
secrets/
*.secret

# 生产配置
production.yaml
prod.yaml

# 证书
certificates/