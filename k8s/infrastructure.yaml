apiVersion: v1
kind: Namespace
metadata:
  name: devcollab-prod
  labels:
    environment: production
    project: cloud-platform-collaborative-dev
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: devcollab-prod
data:
  POSTGRES_DB: "devcollab_production"
  POSTGRES_USER: "devcollab_prod_user"
  POSTGRES_HOST: "postgres-service"
  POSTGRES_PORT: "5432"
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: devcollab-prod
type: Opaque
data:
  # 生产环境密码需要使用更强的密码策略
  POSTGRES_PASSWORD: ZGV2Y29sbGFiX3Byb2RfcGFzcw== # base64: devcollab_prod_pass
  JWT_SECRET_KEY: c3VwZXItc2VjdXJlLWp3dC1rZXktZm9yLXByb2R1Y3Rpb24tZW52aXJvbm1lbnQtMzJjaGFyYWN0ZXJz # base64: super-secure-jwt-key-for-production-environment-32characters
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: devcollab-prod
data:
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: devcollab-prod
type: Opaque
data:
  REDIS_PASSWORD: cmVkaXNfcHJvZF9wYXNzXzEyMw== # base64: redis_prod_pass_123
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: devcollab-prod
spec:
  serviceName: postgres-service
  replicas: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: postgres-config-vol
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - $(POSTGRES_USER)
            - -d
            - $(POSTGRES_DB)
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1"
      volumes:
      - name: postgres-config-vol
        configMap:
          name: postgres-tuning-config
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 100Gi
      storageClassName: fast-ssd
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: devcollab-prod
spec:
  selector:
    app: postgres
  ports:
  - port: 5432
    targetPort: 5432
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: devcollab-prod
spec:
  serviceName: redis-service
  replicas: 6  # 3主3从
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        command:
        - redis-server
        - /etc/redis/redis.conf
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config-vol
          mountPath: /etc/redis/redis.conf
          subPath: redis.conf
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: REDIS_PASSWORD
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: redis-config-vol
        configMap:
          name: redis-cluster-config
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 20Gi
      storageClassName: fast-ssd
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: devcollab-prod
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
  clusterIP: None